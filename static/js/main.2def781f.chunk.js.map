{"version":3,"sources":["components/UniversityList.js","components/SearchUniversity.js","App.js","reportWebVitals.js","index.js"],"names":["UniversityList","props","className","universities","map","university","index","country","name","href","target","rel","SearchUniversity","onChange","event","setSearchValue","value","countries","App","useState","setUniversity","searchValue","setCountries","getUniversity","a","url","fetch","response","json","responseJSON","listOfCountries","res","resJSON","console","log","useEffect","src","alt","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAyCeA,EA/BQ,SAACC,GACtB,OACE,mCACE,qBAAKC,UAAU,YAAf,SACE,wBAAOA,UAAU,kCAAjB,UACE,gCACE,+BACE,yCACA,sCACA,0CAGJ,gCACGD,EAAME,aAAaC,KAAI,SAACC,EAAYC,GAAb,OACtB,+BACE,6BAAKD,EAAWE,UAChB,6BAAKF,EAAWG,OAChB,6BACE,mBAAGC,KAAMJ,EAAU,UAAc,GAAIK,OAAQ,SAAUC,IAAI,aAA3D,SACGN,EAAU,UAAc,uBCD9BO,EAlBU,SAACX,GACtB,OACQ,qBAAKC,UAAY,WAAjB,SACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,uBAGJ,wBAAQA,UAAU,eAAeW,SAAU,SAACC,GAAD,OAAWb,EAAMc,eAAeD,EAAMJ,OAAOM,QAAxF,SACKf,EAAMgB,UAAUb,KAAI,SAACG,EAASD,GAAV,OACjB,wBAAQU,MAAOT,EAAO,QAAtB,SAAoCA,EAAO,qBC+CxDW,EA7DH,WACV,MAAsCC,mBAAS,IAA/C,mBAAOhB,EAAP,KAAqBiB,EAArB,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBN,EAApB,KACA,EAAkCI,mBAAS,IAA3C,mBAAOF,EAAP,KAAkBK,EAAlB,KAEMC,EAAa,uCAAG,WAAOF,GAAP,mBAAAG,EAAA,6DACdC,EADc,0DAC2CJ,GAD3C,SAGGK,MAAMD,GAHT,cAGdE,EAHc,gBAIOA,EAASC,OAJhB,QAIdC,EAJc,SAOlBT,EAAcS,GAPI,2CAAH,sDAWbC,EAAe,uCAAG,8BAAAN,EAAA,qHAEHE,MAFG,+DAEfK,EAFe,gBAGAA,EAAIH,OAHJ,QAKE,KAFlBI,EAHgB,QAKZ,QACRC,QAAQC,IAAI,oBAAqBF,EAAO,KAAS,IACjDV,EAAaU,EAAO,OAPA,2CAAH,qDAmBrB,OARAG,qBAAU,WACRL,MACC,IAEHK,qBAAU,WACRZ,EAAcF,KACb,CAACA,IAGF,sBAAKnB,UAAU,kBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,qBACEA,UAAU,uBACVkC,IAAI,qEACJC,IAAI,GACJC,MAAM,KACNC,OAAO,OAET,sDAGF,qBAAKrC,UAAU,MAAf,SACE,cAAC,EAAD,CACEmB,YAAaA,EACbN,eAAgBA,EAAgBE,UAAaA,MAGjD,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,CAAgBC,aAAcA,UCjDvBqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2def781f.chunk.js","sourcesContent":["/**\n * @author Rajmani Prasad\n * @email rprasad@okkular.io\n * @create date 2021-08-01 14:37:24\n * @modify date 2021-08-01 14:37:24\n * @desc [this component renders a list of universities]\n */\n\nimport React from \"react\";\n\nconst UniversityList = (props) => {\n  return (\n    <>\n      <div className=\"col-md-12\">\n        <table className=\"table table-bordered table-dark\">\n          <thead>\n            <tr>\n              <th>Country</th>\n              <th>Name</th>\n              <th>URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.universities.map((university, index) => (\n              <tr>\n                <td>{university.country}</td>\n                <td>{university.name}</td>\n                <td>\n                  <a href={university[\"web_pages\"][0]} target={\"_blank\"} rel=\"noreferrer\">\n                    {university[\"web_pages\"][0]}\n                  </a>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default UniversityList;\n","/**\n * @author Rajmani Prasad\n * @email rprasad@okkular.io\n * @create date 2021-08-01 14:36:22\n * @modify date 2021-08-01 14:36:22\n * @desc [This component search university based on particular country]\n */\n\nimport React from 'react';\n\nconst SearchUniversity = (props) => {\n    return (\n            <div className = \"col-md-6\">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">Country</span>\n                    </div>\n\n                    <select className='form-control' onChange={(event) => props.setSearchValue(event.target.value)}>\n                        {props.countries.map((country, index)=>(\n                            <option value={country['country']}>{country['country']}</option>\n                        ))}\n                    </select>\n                </div>\n            </div>\n    )\n}\n\nexport default SearchUniversity;","import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport UniversityList from \"./components/UniversityList\";\nimport SearchUniversity from \"./components/SearchUniversity\";\n\nconst App = () => {\n  const [universities, setUniversity] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n\n  const getUniversity = async (searchValue) => {\n    const url = `http://universities.hipolabs.com/search?country=${searchValue}`;\n\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n\n    if (responseJSON) {\n      setUniversity(responseJSON);\n    }\n  };\n\n  const listOfCountries = async() => {\n    const api_url_for_countries = `https://countriesnow.space/api/v0.1/countries`;\n    const  res = await fetch(api_url_for_countries);\n    const resJSON = await res.json();\n    debugger;\n    if(resJSON['error'] === false){\n      console.log('list of countries', resJSON['data'][0])\n      setCountries(resJSON['data'])\n    }\n  }\n\n  useEffect(() => {\n    listOfCountries();\n  }, [])\n\n  useEffect(() => {\n    getUniversity(searchValue);\n  }, [searchValue]);\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"py-5 text-center\">\n        <img\n          className=\"d-block mx-auto mb-4\"\n          src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\"\n          alt=\"\"\n          width=\"72\"\n          height=\"72\"\n        />\n        <h2>University Finder</h2>\n       \n      </div>\n      <div className=\"row\">\n        <SearchUniversity\n          searchValue={searchValue}\n          setSearchValue={setSearchValue} countries = {countries}\n        />\n      </div>\n      <div className=\"row\">\n        <UniversityList universities={universities} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}